[[plugins]]
repo = 'liuchengxu/vista.vim'
on_cmd = 'Vista'
on_map = ['<C-f><C-v>']
hook_source = '''
  let g:vista_default_executive = 'coc'
  let g:vista_echo_cursor_strategy='floating_win'
  let g:vista#renderer#enable_icon = 1
  let g:vista_highlight_whole_line = 1
  let g:vista#renderer#icons = {
\   "function": "\uf794",
\   "variable": "\uf71b",
\  }
  nmap <silent> <C-f><C-v> :<C-u>Vista<CR>
  " nmap <silent> <C-f><C-s> :<C-u>Vista finder<CR>
'''

hook_add = '''
if v:vim_did_enter
  call vista#RunForNearestMethodOrFunction()
endif
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
on_map = ['sh']
hook_source = '''
nnoremap <silent> sh <cmd>Deol -split<CR>
autocmd FileType deol setlocal signcolumn=no
'''

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'
depends = ['fern.vim']

[[plugins]]
repo = 'lambdalisue/fern.vim'
on_cmd = 'Fern'
on_map = ['ge', ',ge']
hook_source = '''
  nmap <silent> ge :<C-u>Fern . -reveal=%<CR>
  nmap <silent> <Leader>ge :<C-u>Fern . -drawer -reveal=% -toggle<CR>
'''
depends = ['fern-renderer-nerdfont.vim', 'fern-git-status.vim']

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'
depends = ['fern.vim']

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
depends = ['nvim-web-devicons']
hook_source = '''
  let g:fern#renderer = "nerdfont"
'''

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/gina.vim'
on_cmd = 'Gina'
hook_source = '''
    call gina#custom#command#alias('branch', 'br')
    call gina#custom#command#option('br', '-v', 'v')
    call gina#custom#command#option(
      \ '/\%(log\|reflog\)',
      \ '--opener', 'vsplit'
      \)
    call gina#custom#command#option(
      \ 'log', '--group', 'log-viewer'
      \)
    call gina#custom#command#option(
      \ 'reflog', '--group', 'reflog-viewer'
      \)
    call gina#custom#command#option(
      \ 'diff', '--group', 'diff'
      \)
    call gina#custom#command#option(
      \ 'commit', '-v|--verbose'
      \)
    call gina#custom#mapping#nmap(
      \ 'status', '<C-c><C-c>',
      \ ':<C-u>Gina commit<CR>',
      \ {'noremap': 1, 'silent': 1}
      \)
    call gina#custom#mapping#nmap(
      \ 'commit', '<C-s><C-s>',
      \ ':<C-u>Gina status<CR>',
      \ {'noremap': 1, 'silent': 1}
      \)
    call gina#custom#execute(
      \ '/\%(status\|branch\|ls\|grep\|changes\|tag\)',
      \ 'setlocal winfixheight',
      \)
    call gina#custom#mapping#nmap(
      \ 'status', 'dj',
      \ 'j:<C-u>call gina#action#call("diff:preview:top")<CR>',
      \ {'noremap': 1, 'silent': 1}
      \)
    call gina#custom#mapping#nmap(
      \ 'status', 'dk',
      \ 'k:<C-u>call gina#action#call("diff:preview:top")<CR>',
      \ {'noremap': 1, 'silent': 1}
      \)
'''

[[plugins]]
repo = 'simeji/winresizer'
on_map = '<C-e>'

[[plugins]]
repo='skywind3000/asyncrun.vim'
hook_add = '''
  let g:asyncrun_open = 14
  " autocmd User AsyncRunStop copen | $ | wincmd p
'''

[[plugins]]
repo='janko/vim-test'
on_cmd = ['TestNearest', 'TestSuite', 'TestFile', 'TestLast', 'TestVisit']
on_map = ['<C-t>']
depends = ['asyncrun.vim']
hook_source = '''
  nmap <C-t> :TestNearest<CR>
  let g:test#strategy = "asyncrun"
'''

[[plugins]]
repo = 'phaazon/hop.nvim'
on_map = ['<C-f><C-f>']
hook_source = '''
lua<<EOF
require'hop'.setup()
EOF
  nmap <silent> <C-f><C-f> <cmd>HopWord<CR>
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'
hook_source = '''
let g:quickrun_config = {}
autocmd BufNewFile,BufRead *.rs  let g:quickrun_config.rust = {"exec" : "cargo run"}
'''

[[plugins]]
repo = 'nvim-lua/popup.nvim'
depends = ['telescope.nvim']

[[plugins]]
repo = 'nvim-lua/telescope.nvim'
on_lua = ['telescope']
on_cmd = 'Telescope'
on_map = {n = ['<Plug>(Telescope', '<C-f><C-l>', '<C-g>', '<C-f><C-r>', '<C-f><C-s>'], c = ['<Plug>(Telescope']}
depends = ['plenary.nvim', 'popup.nvim']
hook_source = '''
  nmap <silent> <C-f><C-l> <cmd>Telescope find_files find_command={"rg","--smart-case","--files","--hidden","--follow","-g","!.git/*"} theme=get_ivy<CR>
  nmap <silent> <C-g> <cmd>Telescope live_grep vimgrep_arguments=rg,--hidden,--column,--line-number,--no-heading,--smart-case theme=get_ivy only_sort_text=true<CR>
  nmap <silent> <C-f><C-r> <cmd>Telescope oldfiles theme=get_ivy<CR>
  nmap <silent> <C-f><C-s> <cmd>Telescope treesitter theme=get_ivy<CR>
  nmap <silent> <C-f><C-b> <cmd>Telescope buffers theme=get_ivy<CR>
lua << EOF
local actions = require('telescope.actions')

require('telescope').setup{
  defaults = {
    winblend = 35,
    mappings = {
      i = {
        ["<c-x>"] = false,
        ["<c-s>"] = actions.select_vertical,
        ["<Tab>"] = actions.toggle_selection,
        ['<C-q>'] = actions.send_selected_to_qflist,
      }
    }
  },
}
EOF
'''

[[plugins]]
repo = 'nvim-telescope/telescope-fzf-native.nvim'
depends = ['telescope.nvim']
build = 'make'

[[plugins]]
repo = 'delphinus/telescope-memo.nvim'
on_map = '<C-m><C-l>'
depends = ['telescope.nvim']
hook_source = '''
  nmap <silent> <C-m><C-l> <cmd>Telescope memo list<CR>
'''

[[plugins]]
repo = 'pyonk/campfire.vim'
on_cmd = 'CAMPFIRE'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_lua = ['plenary']

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
on_lua = ['gitsigns']
depends = ['plenary.nvim']
hook_add = '''
lua << EOF
require("gitsigns").setup {
  signs = {
    add          = {hl = 'GitSignsAdd'   , text = '‖', numhl='GitSignsAddNr'   , linehl='GitSignsAddLn'},
    change       = {hl = 'GitSignsChange', text = '‖', numhl='GitSignsChangeNr', linehl='GitSignsChangeLn'},
    delete       = {hl = 'GitSignsDelete', text = '_', numhl='GitSignsDeleteNr', linehl='GitSignsDeleteLn'},
    topdelete    = {hl = 'GitSignsDelete', text = '‾', numhl='GitSignsDeleteNr', linehl='GitSignsDeleteLn'},
    changedelete = {hl = 'GitSignsChange', text = '~', numhl='GitSignsChangeNr', linehl='GitSignsChangeLn'},
  },
  signcolumn = true,  -- Toggle with `:Gitsigns toggle_signs`
  numhl      = false, -- Toggle with `:Gitsigns toggle_numhl`
  linehl     = false, -- Toggle with `:Gitsigns toggle_linehl`
  word_diff  = true, -- Toggle with `:Gitsigns toggle_word_diff`
}
EOF
'''

[[plugins]]
repo = 'pyonk/telescope-hugo.nvim'
on_map = ['<C-h><C-l>', '<C-h><C-n>']
depends = ['telescope.nvim']
hook_source = '''
  nmap <silent> <C-h><C-l> <cmd>Telescope hugo list<CR>
  nmap <silent> <C-h><C-n> <cmd>Telescope hugo new<CR>
'''

[[plugins]]
repo = 'previm/previm'
on_cmd = ['PrevimOpen']
hook_add = '''
let g:previm_open_cmd = 'open -a Google\ Chrome'
'''

[[plugins]]
repo   = 'aiya000/aho-bakaup.vim'
on_cmd = [
    'BakaupBackupExecute',
    'BakaupEnable',
    'BakaupDisable',
    'BakaupArchiveBackups',
    'BakaupSetBackupDir',
    'BakaupExplore',
    'BakaupTexplore',
    'BakaupVexplore',
    'BakaupSexplore',
]
hook_add = '''
let g:bakaup_auto_backup = 1
'''
